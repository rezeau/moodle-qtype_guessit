define("qtype_guessit/wordlenavigation",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=
/**
   * JavaScript code for the guessit question type.
   *
   * @copyright  2025 Joseph RÃ©zeau
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
function(){document.querySelectorAll("input.correct").forEach((input=>{input.readOnly=!0,input.style.cursor="not-allowed"})),document.querySelectorAll('[id^="question-"]').forEach((question=>{const gaps=question.querySelectorAll('input[type="text"][name*="p"]'),checkButton=question.querySelector('button[type="submit"].submit');gaps.forEach(((element,index)=>{element.addEventListener("click",(()=>{element.classList.contains("correct")||(element.value="",element.classList.remove("correct","partiallycorrect","incorrect"))})),element.addEventListener("keydown",(event=>{/^[a-zA-Z]$/.test(event.key)||event.preventDefault()})),element.addEventListener("keyup",(event=>{if("Tab"===event.key&&event.shiftKey){event.preventDefault();let prevIndex=index-1;for(;-1!==prevIndex&&gaps[prevIndex].classList.contains("correct");)prevIndex--;if(-1!==prevIndex)gaps[prevIndex].focus(),gaps[prevIndex].classList.contains("incorrect")&&(gaps[prevIndex].value="",gaps[prevIndex].classList.remove("incorrect"))}})),element.addEventListener("input",(()=>{if(element.value.length>1&&(element.value=element.value.charAt(0)),element.value=element.value.toUpperCase(),/^[a-zA-Z]$/.test(element.value)){let nextIndex=index+1;for(;nextIndex<gaps.length&&gaps[nextIndex].classList.contains("correct");)nextIndex++;if(nextIndex<gaps.length){let nextGap=gaps[nextIndex];nextGap.classList.contains("correct")||(""!==nextGap.value.trim()&&(nextGap.value=""),nextGap.focus(),nextGap.classList.remove("correct","partiallycorrect","incorrect"))}else checkButton&&checkButton.focus()}}))}))}))}}));

//# sourceMappingURL=wordlenavigation.min.js.map